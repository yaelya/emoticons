/* Generated By:JavaCC: Do not edit this line. LexerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int HAPPY = 6;
  /** RegularExpression Id. */
  int SAD = 7;
  /** RegularExpression Id. */
  int WINK = 8;
  /** RegularExpression Id. */
  int SMILE = 9;
  /** RegularExpression Id. */
  int TONGUE = 10;
  /** RegularExpression Id. */
  int EMBARRASSED = 11;
  /** RegularExpression Id. */
  int SURPRISED = 12;
  /** RegularExpression Id. */
  int FLOWER = 13;
  /** RegularExpression Id. */
  int KISS = 14;
  /** RegularExpression Id. */
  int SNAKE = 15;
  /** RegularExpression Id. */
  int HAPPYNUM = 16;
  /** RegularExpression Id. */
  int SADNUM = 17;
  /** RegularExpression Id. */
  int HEART = 18;
  /** RegularExpression Id. */
  int LOVE4HEVR = 19;
  /** RegularExpression Id. */
  int LB = 20;
  /** RegularExpression Id. */
  int RB = 21;
  /** RegularExpression Id. */
  int DIGIT = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int ASSIGN = 24;
  /** RegularExpression Id. */
  int COLON = 25;
  /** RegularExpression Id. */
  int HYPHEN = 26;
  /** RegularExpression Id. */
  int SEMIC = 27;
  /** RegularExpression Id. */
  int PIPE = 28;
  /** RegularExpression Id. */
  int LT = 29;
  /** RegularExpression Id. */
  int C = 30;
  /** RegularExpression Id. */
  int CO = 31;
  /** RegularExpression Id. */
  int TILDA = 32;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<HAPPY>",
    "<SAD>",
    "<WINK>",
    "<SMILE>",
    "<TONGUE>",
    "<EMBARRASSED>",
    "<SURPRISED>",
    "<FLOWER>",
    "<KISS>",
    "<SNAKE>",
    "<HAPPYNUM>",
    "<SADNUM>",
    "<HEART>",
    "<LOVE4HEVR>",
    "\"(\"",
    "\")\"",
    "<DIGIT>",
    "\",\"",
    "\"=\"",
    "\":\"",
    "\"-\"",
    "\";\"",
    "\"|\"",
    "\">\"",
    "\"\\\'\"",
    "\"`\"",
    "\"~\"",
  };

}
